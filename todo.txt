------------
  board.js
------------
 * Board
   * Start the player's view in the middle of the board, rather than at the left
     corner.
   * Add environment object sprites to the board.

 * Header/footer text.
   * Add player stats to the header.
   * Add turn information and informative links to the footer.

 * Sidebar.
   * Add accurate minimap.
   * Add mouseover information of hex.
   * Add real time social updates.

 * More board.
   * Get the board to scroll.
   * Add a background image of stars, get it to scroll more slowly.
   * Get the forground objects to scroll quickly.

---------------
  location.py
---------------
 * Work on new generation algorithms and layouts for Sector/System/Tactical.

 * Redo location to be a static class with class methods that act on certain
   locations to do calculations (distance, radius, etc.)

 * Tactical
   * Add a name that adjusts based on whether it's a planet or asteroid field
     or some other significant object where this is taking place.
   * Vary size based on traits of the planet or asteroid field?
   * Add generator.


-----------
  game.py
-----------
 * Redo the player class to provide what the new JavaScript GUI will expect.

 * Finish the turn loop so that it is functional.


---------
  Other
---------
 * Implement the combat system and movement system for fleets/spacecraft/etc.

 * Implement fleet system, which is linked closely to combat / movement.
   * Ships move as part of a fleet.
   * Alliances can have fleets, or individual players can.
   * The deputy can move or fight. The commander can move/fight/administer.
   * Anyone in the group (alliance or player) can join/leave the fleet.
   * The commander can kick ships and players from the fleet.
   * There should also be locked fleets that are only allowed to certain
     players, even though the alliance has more people.

 * Integrate Player with openID. How will authentication be handled?

 * Think of a way to hide certain API data files from certain players.
   * Redo the API.

 * Implement economy:
   * Income and money.
   * Resources and mining.
   * Tributes, trade, and bounty.
   * Wages for units and upkeep for other stuff?
   * Buy/sell structures, spacecraft, components, units, etc.

 * Add some method by which the clients can handle the exceptions where the
   user should see it.
   * Use an error log for the other exceptions.

