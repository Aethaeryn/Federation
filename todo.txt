*********************
  Federation Server
*********************
----------------------
  Ongoing Multi-File
----------------------
 * There's no point in making the source available if you're the only one who
   is capable of reading it.

 * Add exception throwing/handling where errors can happen.
   * Pass these errors into the clients so they can handle them somehow.

 * Let's see if Tactical is superfluous with star system or if it makes the
   game more enjoyable.


------------------
  environment.py
------------------
 * Check to make sure that components / spacecraft have valid values before
   running Spacecraft.initializeComponents()
 * Handle component damage and enabling / disabling of components.


---------------
  location.py
---------------
 * Work on new generation algorithms for Sector/System/Tactical.

 * Location.distance() and Location.radius()
   * Tested, comment, etc.

 * Map.accessCoords()
   * Delete location objects later on if they're empty to save space.

 * Map.list()
   * Rewrite so it's more useful than just printing a string for debugging
     purposes.

 * Map.__str__()
   * Fix the naming and string system.

 * Tactical
   * Add a name that adjusts based on whether it's a planet or asteroid field
     or some other significant object where this is taking place.
   * Vary size based on traits of the planet or asteroid field?
   * Add generator.

 * System.__init__()
   * Add other layouts, including binary and tertiary stars.
   * Populate the generator.
   * Integrate with Tactical()


-----------
  game.py
-----------
 * Think of a way to hide certain API data files from certain players.

 * Add buy/sell methods for structures/spacecraft/components/units/etc. Do it
   through those objects rather than through Player().
   * Make sure you handle cases where there's not enough cash.

 * Finish the turn loop so that it is functional.

 * Player
   * Handle last_view.
   * Add some mechanism to request membership in an alliance.

 * Fleet
   * Add management mechanisms, and ability to use as part of an alliance.
   * Deputy can move/fight. Commander can move/fight/administer fleet.
   * Anyone with ships in it can join/leave fleet. Commander can kick ships and
     players from the fleet.


-----------------------
  One Time Multi-File
-----------------------
 * Integrate Player with openID. How will authentication be handled?

 * Implement the combat system and movement system for fleets/spacecraft/etc.

 * Implement economy, money, resources, tribute, etc.
   * Add wages for units and upkeep for spacecraft/structures?

 * Use gettext for internationalization.


###############################################################################
*********************
  Federation Client
*********************
 * Obtain artistic resources for client/resources

 * Prepare for these client UIs:
   * web (desktop, mobile), python (CLI, IRC, GUI)


###############################################################################
**********************
  Federation Website
**********************
 * Update the website to contain more up-to-date information and a better main
   page.

 * Redo the styling of the website.

